// Generated by jextract

package org.fuse;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class vol_capabilities_attr {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        MemoryLayout.sequenceLayout(4, Constants$root.C_INT$LAYOUT).withName("capabilities"),
        MemoryLayout.sequenceLayout(4, Constants$root.C_INT$LAYOUT).withName("valid")
    ).withName("vol_capabilities_attr");
    public static MemoryLayout $LAYOUT() {
        return vol_capabilities_attr.$struct$LAYOUT;
    }
    public static MemorySegment capabilities$slice(MemorySegment seg) {
        return seg.asSlice(0, 16);
    }
    public static MemorySegment valid$slice(MemorySegment seg) {
        return seg.asSlice(16, 16);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


