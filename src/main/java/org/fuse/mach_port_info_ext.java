// Generated by jextract

package org.fuse;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class mach_port_info_ext {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        MemoryLayout.structLayout(
            Constants$root.C_INT$LAYOUT.withName("mps_pset"),
            Constants$root.C_INT$LAYOUT.withName("mps_seqno"),
            Constants$root.C_INT$LAYOUT.withName("mps_mscount"),
            Constants$root.C_INT$LAYOUT.withName("mps_qlimit"),
            Constants$root.C_INT$LAYOUT.withName("mps_msgcount"),
            Constants$root.C_INT$LAYOUT.withName("mps_sorights"),
            Constants$root.C_INT$LAYOUT.withName("mps_srights"),
            Constants$root.C_INT$LAYOUT.withName("mps_pdrequest"),
            Constants$root.C_INT$LAYOUT.withName("mps_nsrequest"),
            Constants$root.C_INT$LAYOUT.withName("mps_flags")
        ).withName("mpie_status"),
        Constants$root.C_INT$LAYOUT.withName("mpie_boost_cnt"),
        MemoryLayout.sequenceLayout(6, Constants$root.C_INT$LAYOUT).withName("reserved")
    ).withName("mach_port_info_ext");
    public static MemoryLayout $LAYOUT() {
        return mach_port_info_ext.$struct$LAYOUT;
    }
    public static MemorySegment mpie_status$slice(MemorySegment seg) {
        return seg.asSlice(0, 40);
    }
    static final VarHandle mpie_boost_cnt$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("mpie_boost_cnt"));
    public static VarHandle mpie_boost_cnt$VH() {
        return mach_port_info_ext.mpie_boost_cnt$VH;
    }
    public static int mpie_boost_cnt$get(MemorySegment seg) {
        return (int)mach_port_info_ext.mpie_boost_cnt$VH.get(seg);
    }
    public static void mpie_boost_cnt$set( MemorySegment seg, int x) {
        mach_port_info_ext.mpie_boost_cnt$VH.set(seg, x);
    }
    public static int mpie_boost_cnt$get(MemorySegment seg, long index) {
        return (int)mach_port_info_ext.mpie_boost_cnt$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void mpie_boost_cnt$set(MemorySegment seg, long index, int x) {
        mach_port_info_ext.mpie_boost_cnt$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment reserved$slice(MemorySegment seg) {
        return seg.asSlice(44, 24);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


