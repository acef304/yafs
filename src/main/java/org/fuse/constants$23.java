// Generated by jextract

package org.fuse;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$23 {

    static final FunctionDescriptor os_function_t$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle os_function_t$MH = RuntimeHelper.downcallHandle(
        constants$23.os_function_t$FUNC
    );
    static final FunctionDescriptor os_block_t$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle os_block_t$MH = RuntimeHelper.downcallHandle(
        constants$23.os_block_t$FUNC
    );
    static final FunctionDescriptor fhopen$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle fhopen$MH = RuntimeHelper.downcallHandle(
        "fhopen",
        constants$23.fhopen$FUNC
    );
    static final FunctionDescriptor fstatfs$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle fstatfs$MH = RuntimeHelper.downcallHandle(
        "fstatfs",
        constants$23.fstatfs$FUNC
    );
    static final FunctionDescriptor getfh$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle getfh$MH = RuntimeHelper.downcallHandle(
        "getfh",
        constants$23.getfh$FUNC
    );
}


