// Generated by jextract

package org.fuse;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class __darwin_arm_debug_state32 {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        MemoryLayout.sequenceLayout(16, Constants$root.C_INT$LAYOUT).withName("__bvr"),
        MemoryLayout.sequenceLayout(16, Constants$root.C_INT$LAYOUT).withName("__bcr"),
        MemoryLayout.sequenceLayout(16, Constants$root.C_INT$LAYOUT).withName("__wvr"),
        MemoryLayout.sequenceLayout(16, Constants$root.C_INT$LAYOUT).withName("__wcr"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("__mdscr_el1")
    ).withName("__darwin_arm_debug_state32");
    public static MemoryLayout $LAYOUT() {
        return __darwin_arm_debug_state32.$struct$LAYOUT;
    }
    public static MemorySegment __bvr$slice(MemorySegment seg) {
        return seg.asSlice(0, 64);
    }
    public static MemorySegment __bcr$slice(MemorySegment seg) {
        return seg.asSlice(64, 64);
    }
    public static MemorySegment __wvr$slice(MemorySegment seg) {
        return seg.asSlice(128, 64);
    }
    public static MemorySegment __wcr$slice(MemorySegment seg) {
        return seg.asSlice(192, 64);
    }
    static final VarHandle __mdscr_el1$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("__mdscr_el1"));
    public static VarHandle __mdscr_el1$VH() {
        return __darwin_arm_debug_state32.__mdscr_el1$VH;
    }
    public static long __mdscr_el1$get(MemorySegment seg) {
        return (long)__darwin_arm_debug_state32.__mdscr_el1$VH.get(seg);
    }
    public static void __mdscr_el1$set( MemorySegment seg, long x) {
        __darwin_arm_debug_state32.__mdscr_el1$VH.set(seg, x);
    }
    public static long __mdscr_el1$get(MemorySegment seg, long index) {
        return (long)__darwin_arm_debug_state32.__mdscr_el1$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void __mdscr_el1$set(MemorySegment seg, long index, long x) {
        __darwin_arm_debug_state32.__mdscr_el1$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


