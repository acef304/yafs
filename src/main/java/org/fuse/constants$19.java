// Generated by jextract

package org.fuse;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$19 {

    static final FunctionDescriptor signal$x0$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle signal$x0$MH = RuntimeHelper.downcallHandle(
        constants$19.signal$x0$FUNC
    );
    static final FunctionDescriptor signal$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle signal$MH = RuntimeHelper.downcallHandle(
        "signal",
        constants$19.signal$FUNC
    );
    static final FunctionDescriptor audit$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle audit$MH = RuntimeHelper.downcallHandle(
        "audit",
        constants$19.audit$FUNC
    );
    static final FunctionDescriptor auditon$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle auditon$MH = RuntimeHelper.downcallHandle(
        "auditon",
        constants$19.auditon$FUNC
    );
    static final FunctionDescriptor auditctl$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle auditctl$MH = RuntimeHelper.downcallHandle(
        "auditctl",
        constants$19.auditctl$FUNC
    );
    static final FunctionDescriptor getauid$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle getauid$MH = RuntimeHelper.downcallHandle(
        "getauid",
        constants$19.getauid$FUNC
    );
}


