// Generated by jextract

package org.fuse;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$37 {

    static final FunctionDescriptor fuse_fs_init$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle fuse_fs_init$MH = RuntimeHelper.downcallHandle(
        "fuse_fs_init",
        constants$37.fuse_fs_init$FUNC
    );
    static final FunctionDescriptor fuse_fs_destroy$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle fuse_fs_destroy$MH = RuntimeHelper.downcallHandle(
        "fuse_fs_destroy",
        constants$37.fuse_fs_destroy$FUNC
    );
    static final FunctionDescriptor fuse_notify_poll$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle fuse_notify_poll$MH = RuntimeHelper.downcallHandle(
        "fuse_notify_poll",
        constants$37.fuse_notify_poll$FUNC
    );
    static final FunctionDescriptor fuse_fs_new$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle fuse_fs_new$MH = RuntimeHelper.downcallHandle(
        "fuse_fs_new",
        constants$37.fuse_fs_new$FUNC
    );
    static final FunctionDescriptor fuse_register_module$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle fuse_register_module$MH = RuntimeHelper.downcallHandle(
        "fuse_register_module",
        constants$37.fuse_register_module$FUNC
    );
    static final FunctionDescriptor fuse_processor_t$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
}


